name: "Release - NPM"

env:
  DIST_LOCATION: "./dist/"
  VS_WORKFLOW_TYPE: "npm-release"

on:
  push:
    branches:
      - master
      - main
    paths:
      - 'package.json'
    tags-ignore:
      - '*'

jobs:
  publish-npm:
    name: "üöÄ  NPM Publisher"
    runs-on: ubuntu-latest
    steps:
      - name: "üì•  Fetching Repository Contents"
        uses: actions/checkout@main

      - name: "üíæ  Github Repository Metadata"
        uses: varunsridharan/action-repository-meta@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "üí´  VS Utility"
        uses: varunsridharan/action-vs-utility@main

      - name: "‚ö°  Repository - Before Hook"
        run: |
          echo " "
          if [ -f $VS_BEFORE_HOOK_FILE_LOCATION ]; then
            echo "‚úÖ Before Hook File Found : $VS_BEFORE_HOOK_FILE_LOCATION"
            sh $VS_BEFORE_HOOK_FILE_LOCATION
          else
            echo "‚ö†Ô∏è No Before Hook File Found : $VS_BEFORE_HOOK_FILE_LOCATION"
          fi
          echo " "

      - name: "üìê  Installing & Setting UP [NPM]"
        uses: actions/setup-node@v1
        with:
          registry-url: 'https://registry.npmjs.org'

      - name: "üöÄ  Publishing Release"
        id: npmpublisher
        uses: g-actions/npm-publish@main
        with:
          token: ${{ secrets.NPM_TOKEN }}
          registry: 'https://registry.npmjs.org'

      - if: steps.npmpublisher.type != 'none'
        name: "üöÄüöÄ  Creating Github Tag & Release"
        uses: webclipper/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PUBLIC_REPO }}
        with:
          tag_name: ${{steps.npmpublisher.outputs.version}}
          release_name: ${{steps.npmpublisher.outputs.version}}
          body: |
            ---
            ### ___Please Refer [CHANGELOG.md](CHANGELOG.md) detailed information on this release___
            ---
          draft: false
          allow_duplicate: true
          prerelease: false

      - name: "‚ö°  Repository - After Hook"
        run: |
          echo " "
          if [ -f $VS_AFTER_HOOK_FILE_LOCATION ]; then
            echo "‚úÖ After Hook File Found : $VS_AFTER_HOOK_FILE_LOCATION"
            sh $VS_AFTER_HOOK_FILE_LOCATION
          else
            echo "‚ö†Ô∏è No After Hook File Found : $VS_AFTER_HOOK_FILE_LOCATION"
          fi
          echo " "
